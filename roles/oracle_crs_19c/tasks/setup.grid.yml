
- name: set_fact | figure out network device of private network
  set_fact:
    oracle_crs_priv_iface: "{{ hostvars[inventory_hostname]['ansible_' + item]['device'] }}"
    oracle_crs_priv_net:   "{{ hostvars[inventory_hostname]['ansible_' + item]['ipv4']['network'] }}"
  when:
    - hostvars[inventory_hostname]['ansible_' + item].ipv4 is defined
    - hostvars[inventory_hostname]['ansible_' + item].device != 'lo'
    - hostvars[inventory_hostname]['ansible_' + item].device != oracle_crs_public_iface
  with_items: "{{ ansible_interfaces }}"

- name: fail when private network was not found
  fail:
    msg: "private network was not found"
  when: oracle_crs_priv_iface is not defined

- name: "Grid Setup gridSetup.sh (part I)"
  block:
    - name: ACFS Centos path
      copy:
        src: acfs.centos.patch
        dest: "{{ oracle_home }}/lib/"

    - name: Apply patch ACFS Centos patch
      patch:
        src: acfs.centos.patch
        basedir: "{{ oracle_home }}/lib/"
        strip: 0

    - name: Install {{ oracle_gi_response_file }}
      template:
        src:  "{{ oracle_gi_response_file }}"
        dest: "{{ oracle_install_dir_temp }}/"
        mode: '0640'
        owner: "{{ oracle_os_user }}"

    - name: "gridSetup.sh (part I)"
      shell: "./gridSetup.sh -silent -responseFile {{ oracle_install_dir_temp }}/{{ oracle_gi_response_file }} ORACLE_HOME_NAME={{ oracle_home_name }}"
      args:
        chdir: "{{ oracle_home }}"
        creates: "{{ oracle_inventory_location }}/oraInst.loc"
      #ignore_errors: true
      environment:
        CV_ASSUME_DISTID: OEL7.8
      register: grid_setup_out
      failed_when: grid_setup_out.rc > 6
    - debug: 
        msg: "gridSetup.sh (part I) {{ grid_setup_out }}"
      when: grid_setup_out.rc >= 0
    - debug: 
        msg: "Return code is {{ grid_setup_out.rc }}"
      when: grid_setup_out.rc >= 0

  become: yes
  become_user: oracle
  # Condition to be set on caller level
  # when: ansible_hostname == first_rac_node
